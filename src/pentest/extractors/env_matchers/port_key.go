package env_matchers

import (
	"pentest/engine"
	"strconv"
	"strings"
)

type PortKeyMatcher struct{}

func parsePortFromString(val string) (uint16, error) {
	converted, err := strconv.ParseUint(val, 10, 16)
	if err == nil {
		return uint16(converted), nil
	} else {
		return 0, err
	}

}

func (matcher PortKeyMatcher) Match(key, val string) {
	if strings.Contains(strings.ToLower(key), "port") {
		if port, err := parsePortFromString(val); err == nil {
			engine.AddPort(port, matcher)
		} else {
			engine.Logger.Debugf("port \"%v\" isn't number somehow: %v. skipping.\n", val, err)
		}
	}
}

func init() {
	engine.Logger.Debugf("Adding Environment Port Key Matcher")
	AddMatcher(PortKeyMatcher{})
}
