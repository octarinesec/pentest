package extractors

import (
	"errors"
	"fmt"
	"os"
	"pentest/engine"
	"pentest/extractors/env_matchers"
	"strings"
)

type EnvVarExtractor struct {}

func SplitEnviron(env string) (string, string, error) {
	if len(env) == 0 {
		return "", "", errors.New("Env is empty string!")
	}

	parts := strings.SplitN(env, "=", 2)

	if len(parts) == 1 {
		return parts[0], "", nil
	}

	return parts[0], parts[1], nil
}


func (_ EnvVarExtractor) Extract() {
	for _, e := range os.Environ() {
		key, value, err := SplitEnviron(e)
		if err != nil {
			fmt.Errorf("Error while parsing environ \"%v\": %v\n", e, err)
			continue
		}
		fmt.Printf("Extracting info from env var: (%v, %v)\n", key, value)

		for _, matcher := range env_matchers.GetMatchers() {
			fmt.Printf("Matching entry using %T\n", matcher)
			matcher.Match(key, value)
		}
	}
}

func init() {
	fmt.Println("Adding EnvVar Extractor")
	engine.AddExtractor(EnvVarExtractor{})
}
