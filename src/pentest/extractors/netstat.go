package extractors

import (
	"github.com/drael/GOnetstat"
	"os"
	"pentest/engine"
)

type NetstatExtractor struct{}

func (e NetstatExtractor) Extract() {
	engine.Logger.Debugf("Extracting targets from netstat")

	details := GOnetstat.Tcp()
	for _, process := range details {
		engine.AddIP(process.Ip, e)
		engine.AddPort(uint16(process.ForeignPort), e)
	}
}

func (e NetstatExtractor) Summary() {
	engine.Logger.Infof("IPs extracted using %T:", e)
	for _, ip := range engine.GetIPsByOrigin(e) {
		engine.Logger.Infof("\t%s", ip)
	}
	engine.Logger.Infof("Ports extracted using %T:", e)
	for _, port := range engine.GetPortsByOrigin(e) {
		engine.Logger.Infof("\t%d", port)
	}
}

func init() {
	engine.Logger.Debugf("Adding NetstatExtractor Extractor")

	file, err := os.Open("/proc")
	if err != nil {
		engine.Logger.Debugf("Netstat isn't supported. error opening /proc: %v", err)
		return
	}
	file.Close()

	engine.AddExtractor(NetstatExtractor{})
}
