package testers

import (
	"pentest/engine"
	"sync"
)

func testOnTarget(workerid int, target engine.Target) {
	for _, tester := range engine.GetTesters() {
		engine.Logger.Infof("[%v] Testing using %T on target %v\n", workerid, tester, target)
		tester.Test(target)
	}
}

func testOnTargets(wg *sync.WaitGroup, workerid int, generator <-chan engine.Target) {
	defer wg.Done()
	engine.Logger.Infof("[%d] Started", workerid)
	for target := range generator {
		testOnTarget(workerid, target)
	}
}

func TestOnAllTargets(workers int) {
	engine.Logger.Infof("Starting %d workers...", workers)

	generator := engine.GenerateTarget()

	var wg sync.WaitGroup

	wg.Add(workers)
	for i := 0; i < workers; i++ {
		go testOnTargets(&wg, i, generator)
	}

	wg.Wait()
}
