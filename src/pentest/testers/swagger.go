package testers

import (
	"fmt"
	"net/http"
	"pentest/engine"
	"time"
)

type SwaggerTester struct{}

var httpClient = http.Client{
	Timeout: 50 * time.Millisecond,
}

func testByUrl(url string) bool {
	resp, err := httpClient.Get(url)
	if err != nil {
		return false
	}
	defer resp.Body.Close()

	return resp.StatusCode == http.StatusOK
}

func (tester SwaggerTester) Test(target engine.Target) {
	protocols := []string{"http", "https"}
	paths := []string{"", "v1/", "v2/", "v3/", "v4/"}

	for _, protocol := range protocols {
		for _, path := range paths {
			url := fmt.Sprintf("%s://%s:%d/%sswagger.json", protocol, target.IP, target.Port, path)
			if testByUrl(url) {
				engine.AddTestResult(tester, target, url)
				engine.Logger.Infof("==== Found swagger on %s!\n", url)
			}
		}
	}
}

func init() {
	engine.Logger.Debugf("Adding Swagger Tester")

	engine.AddTester(SwaggerTester{})
}
