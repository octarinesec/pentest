package env_matchers

import (
	"fmt"
	"pentest/engine"
	"regexp"
)

type HostMatcher struct {}

var validIpPortRegex = regexp.MustCompile("((?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3})(?::(\\d{1,5}))?")

func (_ HostMatcher) Match(key, val string) () {
	for _, matches := range validIpPortRegex.FindAllStringSubmatch(val, -1) {
		if len(matches) > 1 {
			engine.AddIP(matches[1])
			if len(matches) == 3 {
				port, err := ParsePortFromString(matches[2])
				if err == nil {
					engine.AddPort(port)
				} else {
					fmt.Errorf("Port %v isn't number somehow: %v. skipping.\n", matches[2], err)
				}
			}
			continue
		}
	}
	return
}

func init () {
	fmt.Printf("Loading Environment Host Matcher")
	AddMatcher(HostMatcher{})
}

