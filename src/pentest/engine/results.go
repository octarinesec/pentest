package engine

import (
	"encoding/json"
	"fmt"
)

type TargetResult struct {
	Testers		map[string]interface{}		`json:"testers"`
}

type Results struct {
	TargetResults	map[string]TargetResult 	`json:"targets"`
}

var results Results

func AddResult(target Target, tester Tester, result interface{}) {
	targetResult, ok := results.TargetResults[target.String()]
	if !ok {
		targetResult = TargetResult{}
		targetResult.Testers = make(map[string]interface{})
	}
	targetResult.Testers[fmt.Sprintf("%T", tester)] = result

	results.TargetResults[target.String()] = targetResult
}

func MarshallResult() string {
	res, _ := json.MarshalIndent(results, "", "    ")
	return string(res)
}


func init() {
	results.TargetResults = make(map[string]TargetResult)
}