package engine

import "fmt"

type Extractor interface {
	Extract() ([]Tester, error)
}

type Extractors struct {
	extractors []Extractor
}

func (list *Extractors) Add(extractor Extractor) {
	list.extractors = append(list.extractors, extractor)
}

func (list *Extractors) Extract() ([]Tester, error) {
	var testers []Tester

	for _, extractor := range list.extractors {
		testers, err := extractor.Extract()
		if err != nil {
			fmt.Errorf("Error occurred when extracting using %T", extractor)
			continue
		}

		testers = append(testers, testers...)
	}

	return testers, nil
}

