package engine

import "fmt"

type Extractor interface {
	Extract() ([]Tester, error)
}

type Extractors struct {
	extractors []Extractor
}

func (list *Extractors) Add(extractor Extractor) {
	list.extractors = append(list.extractors, extractor)
}

var extractors Extractors

func Extract() ([]Tester, error) {
	var testers []Tester

	for _, extractor := range extractors.extractors {
		extracted, err := extractor.Extract()
		if err != nil {
			fmt.Errorf("Error occurred when extracting using %T: %v", extractor, err)
			continue
		}

		testers = append(testers, extracted...)
	}

	return testers, nil
}

func AddExtractor(e Extractor) {
	extractors.Add(e)
}

